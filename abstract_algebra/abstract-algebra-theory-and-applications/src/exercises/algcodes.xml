<?xml version="1.0"?>
<!-- This file is part of the book                 -->
<!--                                               -->
<!--   Abstract Algebra: Theory and Applications   -->
<!--                                               -->
<!-- Copyright (C) 1997-2014  Thomas W. Judson     -->
<!-- See the file COPYING for copying conditions.  -->
<!--                                               -->
<!-- This file is automatically generated from the -->
<!-- private solution manual.  Minor contributed   -->
<!-- edits can be made against this file for       -->
<!-- the purpose of a pull request.                -->
<exercises>
	<title>Exercises</title>

	<exercise number="1">
		<statement>
			<p>Why is the following encoding scheme not acceptable?
				<me>
				\begin{array}{lcccccccccc}
				\hline
				\text{Information:} &amp; 0 &amp; 1 &amp; 2 &amp; 3 &amp; 4 &amp; 5 &amp; 6 &amp; 7 &amp; 8 &amp;
				\\ \hline
				\text{Codeword:} &amp; 000 &amp; 001 &amp; 010 &amp; 011 &amp; 101 &amp; 110
				&amp; 111 &amp; 000 &amp; 001 \\ \hline
				\end{array}</me></p>
		</statement>
		
	</exercise>

	<exercise number="2">
		<statement>
			<p>Without doing any addition, explain why the following set of 4-tuples in <m>{\mathbb Z}_2^4</m> cannot be a group code. 
				<me>(0110) \quad (1001) \quad (1010) \quad (1100)</me></p>
		</statement>
		<hint>
			<p>This cannot be a group code since <m>(0000) \notin C</m>.</p>
		</hint>
		
	</exercise>

	<exercise number="3">
		<statement>
			<p>Compute the Hamming distances between the following pairs of <m>n</m>-tuples.
				<ol cols="2" enum="(a)">

					<li><m>(011010), (011100)</m></li>

					<li><m>(11110101), (01010100)</m></li>

					<li><m>(00110), (01111)</m></li>

					<li><m>(1001), (0111)</m></li>

				</ol></p>
		</statement>
		<hint>
			<p>(a) 2; (c) 2.</p>
		</hint>
		
	</exercise>

	<exercise number="4">
		<statement>
			<p>Compute the weights of the following <m>n</m>-tuples.
				<ol cols="2" enum="(a)">

					<li><m>(011010)</m></li>

					<li><m>(11110101)</m></li>

					<li><m>(01111)</m></li>

					<li><m>(1011)</m></li>

				</ol></p>
		</statement>
		<hint>
			<p>(a) 3; (c) 4.</p>
		</hint>
		
	</exercise>

	<exercise number="5">
		<statement>
			<p>Suppose that a linear code <m>C</m> has a minimum weight of 7. What are the error-detection and error-correction capabilities of <m>C</m>?</p>
		</statement>
		
	</exercise>

	<exercise number="6">
		<statement>
			<p>In each of the following codes, what is the minimum distance for the code? What is the best situation we might hope for in connection with error detection and error correction? 
				<ol enum="(a)">
				 
					<li><m>(011010) \; (011100) \; (110111) \; (110000)</m></li>
					 
					<li><m>(011100) \; (011011) \; (111011) \; (100011)</m> \; <m>(000000) \; (010101) \; (110100) \; (110011)</m></li>
					 
					<li><m>(000000) \; (011100) \; (110101) \; (110001)</m></li>
					 
					<li><m>(0110110) \; (0111100) \; (1110000) \; (1111111)</m> \; <m>(1001001) \; (1000011) \; (0001111) \; (0000000)</m></li>
				 
				</ol></p>
		</statement>
		<hint>
			<p>(a) <m>d_{\min} = 2</m>; (c) <m>d_{\min} = 1</m>.</p>
		</hint>
		
	</exercise>

	<exercise number="7">
		<statement>
			<p>Compute the null space of each of the following matrices.  What type of <m>(n,k)</m>-block codes are the null spaces? Can you find a matrix (not necessarily a standard generator matrix) that generates each code? Are your generator matrices unique?
				<ol cols="2" enum="(a)">

					<li><me>\begin{pmatrix}
					0 &amp; 1 &amp; 0 &amp; 0 &amp; 0 \\
					1 &amp; 0 &amp; 1 &amp; 0 &amp; 1 \\
					1 &amp; 0 &amp; 0 &amp; 1 &amp; 0
					\end{pmatrix}</me></li>

					<li><me>\begin{pmatrix}
					1 &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 0 \\
					1 &amp; 1 &amp; 0 &amp; 1 &amp; 0 &amp; 0 \\
					0 &amp; 1 &amp; 0 &amp; 0 &amp; 1 &amp; 0 \\
					1 &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; 1
					\end{pmatrix}</me></li>

					<li><me>\begin{pmatrix}
					1 &amp; 0 &amp; 0 &amp; 1 &amp; 1 \\
					0 &amp; 1 &amp; 0 &amp; 1 &amp; 1
					\end{pmatrix}</me></li>

					<li><me>\begin{pmatrix}
					0 &amp; 0 &amp; 0 &amp; 1 &amp; 1 &amp; 1 &amp; 1 \\
					0 &amp; 1 &amp; 1 &amp; 0 &amp; 0 &amp; 1 &amp; 1 \\
					1 &amp; 0 &amp; 1 &amp; 0 &amp; 1 &amp; 0 &amp; 1 \\
					0 &amp; 1 &amp; 1 &amp; 0 &amp; 0 &amp; 1 &amp; 1
					\end{pmatrix}</me></li>

				</ol></p>
		</statement>
		<hint>
			<p><ol enum="(a)">
			 
				<li><m>(00000), (00101), (10011), (10110)</m>
					<me>G = 
					\begin{pmatrix}
					0 &amp; 1 \\
					0 &amp; 0 \\
					1 &amp; 0 \\
					0 &amp; 1 \\
					1 &amp; 1
					\end{pmatrix}</me></li>
				 
				<li><m>(000000), (010111), (101101), (111010)</m>
					<me>G = 
					\begin{pmatrix}
					1 &amp; 0 \\
					0 &amp; 1 \\
					1 &amp; 0 \\
					1 &amp; 1 \\ 
					0 &amp; 1 \\
					1 &amp; 1
					\end{pmatrix}</me></li>
			 
			</ol></p>
		</hint>
		
	</exercise>

	<exercise number="8">
		<statement>
			<p>Construct a <m>(5,2)</m>-block code. Discuss both the error-detection and error-correction capabilities of your code.</p>
		</statement>
		
	</exercise>

	<exercise number="9">
		<statement>
			<p>Let <m>C</m> be the code obtained from the null space of the matrix
				<me>H =
				\begin{pmatrix}
				0 &amp; 1 &amp; 0 &amp; 0 &amp; 1 \\
				1 &amp; 0 &amp; 1 &amp; 0 &amp; 1 \\
				0 &amp; 0 &amp; 1 &amp; 1 &amp; 1
				\end{pmatrix}.</me>
			Decode the message
				<me>01111 \quad 10101 \quad 01110 \quad 00011</me>
			if possible.</p>
		</statement>
		<hint>
			<p>Multiple errors occur in one of the received words.</p>
		</hint>
		
	</exercise>

	<exercise number="10">
		<statement>
			<p>Suppose that a 1000-bit binary message is transmitted. Assume that the probability of a single error is <m>p</m> and that the errors occurring in different bits are independent of one another. If <m>p = 0.01</m>, what is the probability of more than one error occurring? What is the probability of exactly two errors occurring?  Repeat this problem for <m>p = 0.0001</m>.</p>
		</statement>
		
	</exercise>

	<exercise number="11">
		<statement>
			<p>Which matrices are canonical parity-check matrices? For those matrices that are canonical parity-check matrices, what are the corresponding standard generator matrices? What are the error-detection and error-correction capabilities of the code generated by each of these matrices?
				<ol cols="2" enum="(a)">

					<li><me>\begin{pmatrix}
					1 &amp; 1 &amp; 0 &amp; 0 &amp; 0 \\
					0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 \\
					0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 \\
					1 &amp; 0 &amp; 0 &amp; 0 &amp; 1
					\end{pmatrix}</me></li>

					<li><me>\begin{pmatrix}
					0 &amp; 1 &amp; 1 &amp; 0 &amp; 0 &amp; 0 \\
					1 &amp; 1 &amp; 0 &amp; 1 &amp; 0 &amp; 0 \\
					0 &amp; 1 &amp; 0 &amp; 0 &amp; 1 &amp; 0 \\
					1 &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; 1
					\end{pmatrix}</me></li>

					<li><me>\begin{pmatrix}
					1 &amp; 1 &amp; 1 &amp; 0 \\
					1 &amp; 0 &amp; 0 &amp; 1
					\end{pmatrix}</me></li>

					<li><me>\begin{pmatrix}
					0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 0 \\
					0 &amp; 1 &amp; 1 &amp; 0 &amp; 1 &amp; 0 &amp; 0 \\
					1 &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 1 &amp; 0 \\
					0 &amp; 1 &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; 1
					\end{pmatrix}</me></li>

				</ol></p>
		</statement>
		<hint>
			<p>(a) A canonical parity-check matrix with standard generator matrix
					<me>G = 
					\begin{pmatrix}
					1 \\ 1 \\ 0 \\ 0 \\ 1
					\end{pmatrix}.</me></p>

			<p>(c) A canonical parity-check matrix with standard generator matrix
					<me>G = 
					\begin{pmatrix}
					1 &amp; 0 \\
					0 &amp; 1 \\
					1 &amp; 1 \\
					1 &amp; 0
					\end{pmatrix}.</me></p>
		</hint>
		
	</exercise>

	<exercise number="12">
		<statement>
			<p>List all possible syndromes for the codes generated by each of the matrices in the previous exercise.</p>
		</statement>
		<hint>
			<p>(a) In each case all possible syndromes occur.</p>
		</hint>
		
	</exercise>

	<exercise number="13">
		<statement>
			<p>Let
				<me>H =
				\begin{pmatrix}
				0 &amp; 1 &amp; 1 &amp; 1 &amp; 1 \\
				0 &amp; 0 &amp; 0 &amp; 1 &amp; 1 \\
				1 &amp; 0 &amp; 1 &amp; 0 &amp; 1
				\end{pmatrix}.</me>
			Compute the syndrome caused by each of the following transmissionerrors. 
				<ol enum="(a)">
				 
					<li>An error in the first bit.</li>
					 
					<li>An error in the third bit.</li>
					 
					<li>An error in the last bit.</li>
					 
					<li>Errors in the third and fourth bits.</li>
				 
				</ol></p>
		</statement>
		
	</exercise>

	<exercise number="14">
		<statement>
			<p>Let <m>C</m> be the group code in <m>{\mathbb Z}_2^3</m> defined by the codewords <m>(000)</m> and <m>(111)</m>. Compute the cosets of <m>H</m> in <m>{\mathbb Z}_2^3</m>. Why was there no need to specify right or left cosets? Give the single transmission error, if any, to which each coset corresponds.</p>
		</statement>
		
	</exercise>

	<exercise number="15">
		<statement>
		<p>For each of the following matrices, find the cosets of the corresponding code <m>C</m>. Give a decoding table for each code if possible.
			<ol cols="2" enum="(a)">

				<li><me>\begin{pmatrix}
				0 &amp; 1 &amp; 0 &amp; 0 &amp; 0 \\
				1 &amp; 0 &amp; 1 &amp; 0 &amp; 1 \\
				1 &amp; 0 &amp; 0 &amp; 1 &amp; 0
				\end{pmatrix}</me></li>

				<li><me>\begin{pmatrix}
				0 &amp; 0 &amp; 1 &amp; 0 &amp; 0  \\
				1 &amp; 1 &amp; 0 &amp; 1 &amp; 0 \\
				0 &amp; 1 &amp; 0 &amp; 1 &amp; 0 \\
				1 &amp; 1 &amp; 0 &amp; 0 &amp; 1
				\end{pmatrix}</me></li>

				<li><me>\begin{pmatrix}
				1 &amp; 0 &amp; 0 &amp; 1 &amp; 1 \\
				0 &amp; 1 &amp; 0 &amp; 1 &amp; 1
				\end{pmatrix}</me></li>

				<li><me>\begin{pmatrix}
				1 &amp; 0 &amp; 0 &amp; 1 &amp; 1 &amp; 1 &amp; 1 \\
				1 &amp; 1 &amp; 1 &amp; 0 &amp; 0 &amp; 1 &amp; 1 \\
				1 &amp; 0 &amp; 1 &amp; 0 &amp; 1 &amp; 0 &amp; 1 \\
				1 &amp; 1 &amp; 1 &amp; 0 &amp; 0 &amp; 1 &amp; 0
				\end{pmatrix}</me></li>

			</ol></p>
		</statement>
		<hint>
			<p>(a) <m>C</m>, <m>(10000) + C</m>, <m>(01000) + C</m>, <m>(00100) + C</m>, <m>(00010) + C</m>, <m>(11000) + C</m>, <m>(01100) + C</m>, <m>(01010) + C</m>.  A decoding table does not exist for <m>C</m> since this is only a single error-detecting code.</p>
		</hint>
		
	</exercise>

	<exercise number="16">
		<statement>
			<p>Let <m>{\mathbf x}</m>, <m>{\mathbf y}</m>, and <m>{\mathbf z}</m> be binary <m>n</m>-tuples. Prove each of the following statements. 
				<ol enum="(a)">
				 
					<li><m>w({\mathbf x}) = d( {\mathbf x}, {\mathbf 0})</m></li>
					 
					<li><m>d( {\mathbf x}, {\mathbf y}) = d( {\mathbf x} + {\mathbf z}, {\mathbf y} + {\mathbf z} )</m></li>
					 
					<li><m>d({\mathbf x}, {\mathbf y}) = w({\mathbf x}- {\mathbf y})</m></li>
				 
				</ol></p>
		</statement>
		
	</exercise>

	<exercise number="17">
		<statement>
			<p>A <bfi>metric</bfi> on a set <m>X</m> is a map <m>d: X \times X \rightarrow {\mathbb R}</m> satisfying the following conditions. 
				<ol enum="(a)">
		 
					<li><m>d( {\mathbf x}, {\mathbf y}) \geq 0</m> for all <m>{\mathbf x}, {\mathbf y} \in X</m>;</li>
		 
					<li><m>d( {\mathbf x}, {\mathbf y}) = 0</m> exactly when <m>{\mathbf x} = {\mathbf y}</m>;</li>
		 
					<li><m>d( {\mathbf x}, {\mathbf y})= d( {\mathbf y}, {\mathbf x})</m>;</li>
		 
					<li><m>d( {\mathbf x}, {\mathbf y}) \leq d( {\mathbf x}, {\mathbf z}) + d( {\mathbf z}, {\mathbf y})</m>.</li>
		 
				</ol>In other words, a metric is simply a generalization of the notion of distance. Prove that Hamming distance is a metric on <m>{\mathbb Z}_2^n</m>. Decoding a message actually reduces to deciding which is the closest codeword in terms of distance.</p>
		</statement>
		
	</exercise>

	<exercise number="18">
		<statement>
			<p>Let <m>C</m> be a linear code. Show that either the <m>i</m>th coordinates in the codewords of <m>C</m> are all zeros or exactly half of them are zeros.</p>
		</statement>
		
	</exercise>

	<exercise number="19">
		<statement>
			<p>Let <m>C</m> be a linear code. Show that either every codeword has even weight or exactly half of the codewords have even weight.</p>
		</statement>
		<hint>
			<p>Let <m>{\mathbf x} \in C</m> have odd weight and define a map from the set of odd codewords to the set of even codewords by <m>{\mathbf y} \mapsto {\mathbf x} + {\mathbf y}</m>. Show that this map is a bijection.</p>
		</hint>
		
	</exercise>

	<exercise number="20">
		<statement>
			<p>Show that the codewords of even weight in a linear code <m>C</m> are also a linear code.</p>
		</statement>
		
	</exercise>

	<exercise number="21">
		<statement>
			<p>If we are to use an error-correcting linear code to transmit the 128 ASCII characters, what size matrix must be used? What size matrix must be used to transmit the extended ASCII character set of 256 characters?  What if we require only error detection in both cases?</p>
		</statement>
		
	</exercise>

	<exercise number="22">
		<statement>
			<p>Find the canonical parity-check matrix that gives the even parity check bit code with three information positions. What is the matrix for seven information positions?  What are the corresponding standard generator matrices?</p>
		</statement>
		
	</exercise>

	<exercise number="23">
		<statement>
			<p>How many check positions are needed for a single error-correcting code with 20 information positions? With 32 information positions?</p>
		</statement>
		<hint>
			<p>For 20 information positions, at least six check bits are needed to ensure an error-correcting code.</p>
		</hint>
		
	</exercise>

	<exercise number="24">
		<statement>
			<p>Let <m>{\mathbf e}_i</m> be the binary <m>n</m>-tuple with a 1 in the <m>i</m>th coordinate and <m>0</m>'s elsewhere and suppose that <m>H \in {\mathbb M}_{m \times n}({\mathbb Z}_2)</m>. Show that <m>H{\mathbf e}_i</m> is the <m>i</m>th column of the matrix <m>H</m>. </p>
		</statement>
		
	</exercise>

	<exercise number="25">
		<statement>
			<p>Let <m>C</m> be an <m>(n,k)</m>-linear code. Define the <term>dual</term> or <term>orthogonal code</term> of <m>C</m>  to be 
				<me>C^\perp = \{ {\mathbf x} \in {\mathbb Z}_2^n :  {\mathbf x} \cdot {\mathbf y} = 0 \text{ for all } {\mathbf y} \in C \}.</me>
				<ol enum="(a)">
 
					<li>Find the dual code of the linear code <m>C</m> where <m>C</m> is given by the matrix 
						<me>\begin{pmatrix}
						1 &amp; 1 &amp; 1 &amp; 0 &amp; 0 \\
						0 &amp; 0 &amp; 1 &amp; 0 &amp; 1 \\
						1 &amp; 0 &amp; 0 &amp; 1 &amp; 0
						\end{pmatrix}.</me></li>
 
					<li>Show that <m>C^\perp</m> is an <m>(n, n-k)</m>-linear code.</li>
 
					<li>Find the standard generator and parity-check matrices of <m>C</m> and <m>C^\perp</m>. What happens in general? Prove your conjecture.</li>
 
				</ol></p>
		</statement>
		
	</exercise>

	<exercise number="26">
		<statement>
			<p>Let <m>H</m> be an <m>m \times n</m> matrix over <m>{\mathbb Z}_2</m>, where the <m>i</m>th column is the number <m>i</m> written in binary with <m>m</m> bits. The null space of such a matrix is called a <term>Hamming code</term>. 
				<ol enum="(a)">
 
					<li>Show  that the matrix
						<me>H =
						\begin{pmatrix}
						0 &amp; 0 &amp; 0 &amp; 1 &amp; 1 &amp; 1 \\
						0 &amp; 1 &amp; 1 &amp; 0 &amp; 0 &amp; 1 \\
						1 &amp; 0 &amp; 1 &amp; 0 &amp; 1 &amp; 0
						\end{pmatrix}</me>
				generates a Hamming code. What are the error-correcting properties of a Hamming code?</li>
 
					<li>The column corresponding to the syndrome also marks the bit that was in error; that is, the <m>i</m>th column of the matrix is <m>i</m> written as a binary number, and the syndrome  immediately tells us which bit is in error. If the received word is <m>(101011)</m>, compute the syndrome. In which bit did the error occur in this case, and what codeword was originally transmitted?</li>
 
					<li>Give a binary matrix <m>H</m> for the Hamming code with six information positions and four check positions. What are the check positions and what are the information positions? Encode the messages <m>(101101)</m> and <m>(001001)</m>. Decode the received words <m>(0010000101)</m> and <m>(0000101100)</m>.  What are the possible syndromes for this code?</li>
 
					<li>What is the number of check bits and the number of information bits in an <m>(m,n)</m>-block Hamming code? Give both an upper and a lower bound on the number of information bits in terms of the number of check bits. Hamming codes having the maximum possible number of information bits with <m>k</m> check bits are called <bfi>perfect</bfi>. Every possible syndrome except <m>{\mathbf 0}</m> occurs as a column. If the number of information bits is less than the maximum, then the code is called <bfi>shortened</bfi>. In this case, give an example showing that some syndromes can represent multiple errors.</li>
 
				</ol></p>
		</statement>
		
	</exercise>

</exercises>
